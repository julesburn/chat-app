{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* components/Chat.js */\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      chats: []\n    });\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n        cluster: process.env.PUSHER_APP_CLUSTER,\n        encrypted: true\n      });\n      this.channel = this.pusher.subscribe('chat-room');\n      this.channel.bind('new-message', function (_ref) {\n        var _ref$chat = _ref.chat,\n            chat = _ref$chat === void 0 ? null : _ref$chat;\n        var chats = _this2.state.chats;\n        chat && chats.push(chat);\n\n        _this2.setState({\n          chats: chats\n        });\n      });\n      this.pusher.connection.bind('connected', function () {\n        axios.post('/messages').then(function (response) {\n          var chats = response.data.messages;\n\n          _this2.setState({\n            chats: chats\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pusher.disconnect();\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport default Chat;","map":{"version":3,"sources":["C:\\users\\cmben\\bloc\\chat-app\\components\\Chat.js"],"names":["React","Component","Fragment","axios","Pusher","Chat","chats","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","bind","chat","state","push","setState","connection","post","then","response","data","messages","disconnect"],"mappings":";;;;;;;;AAAA;AAEI,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;IAEMC,I;;;;;;;;;;;;;;;;;;4DAEI;AAAEC,MAAAA,KAAK,EAAE;AAAT,K;;;;;;;wCAEY;AAAA;;AAElB,WAAKC,MAAL,GAAc,IAAIH,MAAJ,CAAWI,OAAO,CAACC,GAAR,CAAYC,cAAvB,EAAuC;AACnDC,QAAAA,OAAO,EAAEH,OAAO,CAACC,GAAR,CAAYG,kBAD8B;AAEnDC,QAAAA,SAAS,EAAE;AAFwC,OAAvC,CAAd;AAKA,WAAKC,OAAL,GAAe,KAAKP,MAAL,CAAYQ,SAAZ,CAAsB,WAAtB,CAAf;AAEA,WAAKD,OAAL,CAAaE,IAAb,CAAkB,aAAlB,EAAiC,gBAAqB;AAAA,6BAAlBC,IAAkB;AAAA,YAAlBA,IAAkB,0BAAX,IAAW;AAAA,YAC5CX,KAD4C,GAClC,MAAI,CAACY,KAD6B,CAC5CZ,KAD4C;AAEpDW,QAAAA,IAAI,IAAIX,KAAK,CAACa,IAAN,CAAWF,IAAX,CAAR;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AAAEd,UAAAA,KAAK,EAALA;AAAF,SAAd;AACD,OAJD;AAMA,WAAKC,MAAL,CAAYc,UAAZ,CAAuBL,IAAvB,CAA4B,WAA5B,EAAyC,YAAM;AAC7Cb,QAAAA,KAAK,CAACmB,IAAN,CAAW,WAAX,EACGC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,cAAMlB,KAAK,GAAGkB,QAAQ,CAACC,IAAT,CAAcC,QAA5B;;AACA,UAAA,MAAI,CAACN,QAAL,CAAc;AAAEd,YAAAA,KAAK,EAALA;AAAF,WAAd;AACD,SAJH;AAKD,OAND;AAQD;;;2CAEsB;AACrB,WAAKC,MAAL,CAAYoB,UAAZ;AACD;;;;EA/BgB1B,S;;AAmCnB,eAAeI,IAAf","sourcesContent":["/* components/Chat.js */\r\n\r\n    import React, { Component, Fragment } from 'react';\r\n    import axios from 'axios';\r\n    import Pusher from 'pusher-js';\r\n\r\n    class Chat extends Component {\r\n\r\n      state = { chats: [] }\r\n\r\n      componentDidMount() {\r\n\r\n        this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\r\n          cluster: process.env.PUSHER_APP_CLUSTER,\r\n          encrypted: true\r\n        });\r\n\r\n        this.channel = this.pusher.subscribe('chat-room');\r\n\r\n        this.channel.bind('new-message', ({ chat = null }) => {\r\n          const { chats } = this.state;\r\n          chat && chats.push(chat);\r\n          this.setState({ chats });\r\n        });\r\n\r\n        this.pusher.connection.bind('connected', () => {\r\n          axios.post('/messages')\r\n            .then(response => {\r\n              const chats = response.data.messages;\r\n              this.setState({ chats });\r\n            });\r\n        });\r\n\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        this.pusher.disconnect();\r\n      }\r\n\r\n    }\r\n\r\n    export default Chat;\r\n"]},"metadata":{},"sourceType":"module"}